// src/components/TravelBreakdown.js
import React from 'react';

const TravelBreakdown = ({ travelPlan }) => {
  if (!travelPlan || !travelPlan.travelOptions || travelPlan.travelOptions.length === 0) {
    return null; // Don't render if no travel plan or options
  }

  return (
    <div className="max-w-4xl mx-auto mt-8 p-6 bg-white rounded-lg shadow-md">
      <h2 className="text-2xl font-bold mb-4 text-center text-gray-800">
        Your Travel Plan Breakdown 🗺️
      </h2>

      <div className="mb-6 text-center text-lg font-semibold text-blue-700">
        Minimum Estimated Travel Cost: {travelPlan.minimumTravelCost}
      </div>

      <p className="text-sm text-gray-600 mb-6 text-center italic">
        * All costs and durations are estimates generated by AI and may vary based on live conditions, traffic, and actual fare changes.
      </p>

      <div className="space-y-6">
        {travelPlan.travelOptions.map((option, index) => (
          <div key={index} className="border border-gray-200 rounded-lg p-5 shadow-sm bg-gray-50">
            <h3 className="text-xl font-bold text-blue-600 mb-3 flex items-center">
              {option.mode}
              {option.mode.includes("Walk") && <span className="ml-2 text-2xl">🚶</span>}
              {option.mode.includes("Bus") && <span className="ml-2 text-2xl">🚌</span>}
              {option.mode.includes("Train") && <span className="ml-2 text-2xl">🚆</span>}
              {option.mode.includes("Taxi") && <span className="ml-2 text-2xl">🚕</span>}
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-x-4 gap-y-2 text-gray-700">
              <p><strong>Distance:</strong> {option.total_distance}</p>
              <p><strong>Duration:</strong> {option.total_duration}</p>
              <p><strong>Estimated Cost:</strong> {option.estimated_cost_inr}</p>
            </div>
            {option.steps && option.steps.length > 0 && (
              <div className="mt-4 border-t border-gray-200 pt-3">
                <p className="font-semibold text-gray-800 mb-2">Key Steps/Advice:</p>
                <ul className="list-disc list-inside text-sm text-gray-700 space-y-1">
                  {option.steps.map((step, stepIndex) => (
                    <li key={stepIndex}>{step}</li>
                  ))}
                </ul>
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  );
};

export default TravelBreakdown;